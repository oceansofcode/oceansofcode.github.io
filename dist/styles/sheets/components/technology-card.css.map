{"version":3,"sourceRoot":"","sources":["file:///home/adam/code/oceansofcode.github.io/src/styles/base/_reset.scss","file:///home/adam/code/oceansofcode.github.io/src/styles/utils/_variables.scss","file:///home/adam/code/oceansofcode.github.io/src/styles/utils/_placeholders.scss","file:///home/adam/code/oceansofcode.github.io/src/styles/sheets/components/technology-card.scss","file:///home/adam/code/oceansofcode.github.io/src/styles/utils/_mixins.scss"],"names":[],"mappings":"AACA,EACE,SACA,UACA,aACA,8BACA,2BACA,sBAGF,EACE,qBCDF,MACI,sBCQJ,WACE,mBACA,oBACA,cDPY,OEZd,MACE,YACA,aAGF,WAEE,aACA,sBACA,6BACA,mBACA,YACA,WACA,kBAEA,8BACA,0BAEA,iBACE,qBAIJ,MACE,aACA,YCeA,8CACE,aAGF,6CACE","sourcesContent":["// Reset default browser styles. This should be included in every custom element's shadow DOM.\n* {\n  margin: 0;\n  padding: 0;\n  outline: none;\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  box-sizing: border-box;\n}\n\na {\n  text-decoration: none;\n}","@use 'functions' as *;\n@forward 'functions';\n\n@use 'sass:map';\n@use 'sass:math';\n@use 'sass:color';\n\n$default-opacity:  0.75;\n$header-height: 70px;\n\n:root {\n    --footer-height: 80px;\n}\n\n$side-gap: 15%; // Keeps site aligned better\n$site-radius: 1.2rem;\n\n$dark-theme: 'body.dark &';\n$light-theme: 'body.light &';\n$shadow-dark-theme: ':host(.dark) &';\n$shadow-light-theme: ':host(.light) &';\n\n$themes: (\n    'dark': (\n        'primary-background': hsl(210, 22%, 4%),\n        'secondary-background': hsl(220, 5%, 13%),\n        'primary-text': rgb(232, 230, 227)\n    ),\n    'light': (\n        'primary-background': #FAFAFA,\n        'secondary-background': #e9e9ed,\n        'primary-text': #313441\n    )\n);\n\n// Adds a new property in every theme ending with '-transparent'\n$themes: set-transparent-backgrounds($themes);","@use 'sass:map';\n@use 'variables' as *;\n\n// Create a placeholder for each theme to be used by the theme mixin\n@each $theme, $values in $themes {\n  %body-#{$theme} {\n    background-color: map-get($themes, $theme, 'primary-background');\n  }\n\n  %text-#{$theme} {\n    color: map-get($themes, $theme, 'primary-text');\n  }\n}\n\n%theme-transition {\n  transition: all 750ms;\n  transition-delay: 0ms;\n}\n\n%site-border {\n  border-style: solid;\n  border-width: 0.05rem;\n  border-radius: $site-radius;\n}","@use '../../base/reset';\n@use '../../utils/mixins' as *;\n\n:host {\n  width: 22rem;\n  height: 22rem;\n}\n\n.container {\n  @extend %site-border;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n  height: 100%;\n  width: 100%;\n  text-align: center;\n\n  transition-property: transform;\n  transition-duration: 400ms;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n}\n\n.logo {\n  height: 128px;\n  width: 128px;\n}\n\n::slotted(svg.theme[slot=logo]) {\n  @include shadow-themeable-property('fill', 'primary-text');\n}","@use 'variables' as *;\n@use 'placeholders' as *;\n\n@forward 'variables';\n@forward 'placeholders';\n\n// Transition rules when switching from light to dark mode.\n@mixin theme($theme-name) {\n  @extend %body-#{$theme-name};\n\n  $texts: [h1 h2 h3 h4 h5 h6 details summary p a span];\n  @each $textItem in $texts {\n    #{$textItem} {\n      @extend %text-#{$theme-name};\n    }\n  }\n\n  $boxes: [header section footer];\n  @each $box in $boxes {\n    #{$box} {\n      @extend %body-#{$theme-name};\n      @extend %text-#{$theme-name};\n    }\n  }\n\n  header ul {\n    @extend %body-#{$theme-name};\n  }\n}\n\n// Provides both light and dark theming for a property based on the theme-key provided\n@mixin themeable-property($property-name, $theme-key) {\n  #{$light-theme} {\n    #{$property-name}: map-get($themes, 'light', $theme-key);\n  }\n\n  #{$dark-theme} {\n    #{$property-name}: map-get($themes, 'dark', $theme-key);\n  }\n}\n\n// Mixin for the ShadowDOM to be themeable in conjunction with setCustomElementThemeClass\n@mixin shadow-themeable-property($property-name, $theme-key) {\n  #{$shadow-light-theme} {\n    #{$property-name}: map-get($themes, 'light', $theme-key);\n  }\n\n  #{$shadow-dark-theme} {\n    #{$property-name}: map-get($themes, 'dark', $theme-key);\n  }\n}\n\n@mixin button($width, $height) {\n  display: block;\n  font-family: inherit;\n  font-size: inherit;\n  width: $width;\n  height: $height;\n  cursor: pointer;\n  text-align: center;\n  line-height: 2;\n\n  @extend %site-border;\n  \n  @include themeable-property('border-color', 'primary-text');\n  @include themeable-property('color', 'primary-text');\n  @include themeable-property('background-color', 'secondary-background');\n\n  &:hover {\n    @include themeable-property('background-color', 'primary-background');\n  }\n\n}"]}