{"version":3,"sourceRoot":"","sources":["file:///home/adam/code/oceansofcode.github.io/src/styles/base/_reset.scss","file:///home/adam/code/oceansofcode.github.io/src/styles/pages/components/experience-card.scss","file:///home/adam/code/oceansofcode.github.io/src/styles/utils/_mixins.scss"],"names":[],"mappings":"AACA,EACE,SACA,UACA,aACA,8BACA,2BACA,sBCJF,MAGI,mBACA,oBACA,qBACA,aACA,YACA,aAEA,+CACA,0BCiBF,iBACE,qBAGF,gBACE,kBDpBA,qCAbJ,MAcQ,YAIR,cACI,oBAGJ,QACI,aACA,sBACA,mBACA,kBACA,aAEA,cACI,kBACA,eACA,aACA,YAEA,0BAEA,oBACI","sourcesContent":["// Reset default browser styles. This should be included in every custom element's shadow DOM.\n* {\n  margin: 0;\n  padding: 0;\n  outline: none;\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  box-sizing: border-box;\n}\n","@use \"../../base/reset\";\n@use \"../../utils/mixins\" as *;\n\n:host {\n    @include themeable-property(\"border-color\", \"text\");\n\n    border-style: solid;\n    border-width: 0.05rem;\n    border-radius: 1.2rem;\n    padding: 12px;\n    width: 350px;\n    height: 500px;\n\n    transition-property: translate, filter, transform;\n    transition-duration: 400ms;\n\n    @media screen and (max-width: 800px) {\n        width: 100%;\n    }\n}\n\n:host(:hover) {\n    translate: 0px -2rem;\n}\n\narticle {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    text-align: center;\n    padding: 1rem;\n\n    .logo {\n        text-align: center;\n        margin-top: 10%;\n        height: 150px;\n        width: 150px;\n\n        transition-duration: 400ms;\n\n        &:hover {\n            transform: scale(1.1);\n        }\n    }\n}\n","@use 'variables' as *;\n@use 'placeholders' as *;\n\n@forward 'variables';\n\n// Transition rules when switching from light to dark mode.\n@mixin theme($theme-name) {\n  @extend %body-#{$theme-name};\n\n  $texts: [h1 h2 h3 h4 h5 h6 details summary p a span];\n  @each $textItem in $texts {\n    #{$textItem} {\n      @extend %text-#{$theme-name};\n    }\n  }\n\n  $boxes: [header section footer];\n  @each $box in $boxes {\n    #{$box} {\n      @extend %body-#{$theme-name};\n      @extend %text-#{$theme-name};\n    }\n  }\n\n  header ul {\n    @extend %body-#{$theme-name};\n  }\n}\n\n// Provides both light and dark themeing for a property based on the theme-key provided\n@mixin themeable-property($property-name, $theme-key) {\n  #{$light-theme} {\n    #{$property-name}: map-get($themes, 'light', $theme-key);\n  }\n\n  #{$dark-theme} {\n    #{$property-name}: map-get($themes, 'dark', $theme-key);\n  }\n}"]}